{
	// Place your snippets for powershell here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"PsNx Pode Web Table": {
		"prefix": "PsNxSystemWebTable",
		"body": [
			"Add-PodeWebPage -Name '${1:PageName}' -Icon '${2:MaterialIcon}' -Group '$3' -ScriptBlock {",
			"    New-PodeWebCard -Content @(",
			"        New-PodeWebTable -Name '$1' -ScriptBlock {",
			"            [array]$4 = ($5)",
			"            foreach ($line in $4) {",
			"                [ordered]@{",
			"                    $6 = $line",
			"                }",
			"            }",
			"        }",
			"    )",
			"}"
		]
	},
	"PsNx System Json Endpoint": {
		"prefix": "PsNxPodeJson",
		"body": [
			"Add-PodeRoute -Method Get -Path '/system/${0:endpoint}' -ScriptBlock {",
			"    try {",
			"        \\$jasonAsString = ${2:JsonFunction} | ConvertTo-Json | Out-String",
			"        Write-PodeJsonResponse -ContentType 'application/json' -Value \\$jasonAsString",
			"    }",
			"    catch {",
			"        return New-PsNxError -Data \\$_",
			"    }",
			"}"
		]
	},
	"PsNx Function": {
		"prefix": "PsNxFunction",
		"body": [
			"function ${0:FunctionName} {",
			"    [CmdletBinding()]",
			"    param (",
			"        [${1:Type}]\\$${2:Variable}",
			"    )",
			"",
			"    try {",
			"        # Your code logic here",
			"        \\$data = ${3:PipelineOutput}",
			"        return New-PsNxOutput -Data \\$data",
			"    }",
			"    catch {",
			"        return New-PsNxError -Data \\$_",
			"    }",
			"}"
		],
		"description": "Scaffolds a PowerShell function with structured output using New-PsNxOutput and New-PsNxError."
	},
	"PsNx SystemD Wrapper Pipe": {
		"prefix": "PsNxSystemDWrapperPipe",
		"body": [
			"function ${0}-${1}${2} {",
			"    [CmdletBinding()]",
			"    param()",
			"",
			"    try {",
			"        Invoke-Expression '$3 --no-pager ${4} --output=json' -ErrorAction Stop | ",
			"            ConvertFrom-Json",
			"    }",
			"    catch {",
			"        New-LogErrorObject -ErrorRecord \\$_ -IsTerminatingError \\$true",
			"    }",
			"}"
		],
		"description": "Wraps Systemd commands that support the --no-pager and --output=json options, such as systemctl and journalctl"
	}
}